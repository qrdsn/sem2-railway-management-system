@model JourneyViewModel

@{
    ViewData["Title"] = "Edit";
}

<h1>Settings</h1>

<h4>Journey</h4>
<hr />

@if (Model != null)
{
    <div class="row">
            <h3>@Model.JourneyId</h3>
            <form asp-action="ChangeSettings">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <label>State</label>
                    <select class="form-select" name="state">
                            @if (Model.State == true) {
                                <option selected value="True">Enabled</option>
                                <option value="False">Disabled</option>
                            } 
                            else {
                                <option value="True">Enabled</option>
                                <option selected value="False">Disabled</option>
                            }
                    </select>
                </div><br>
                <div class="form-group">
                    <label>Departure time</label>
                    <p>@Model.DepartureTime</p>
                </div>
                <div class="form-group">
                    <label>Arrival time</label>
                    <p>@Model.ArrivalTime</p>
                </div>
                <div class="form-group">
                    <label>Adjusted departure time</label>
                    <input name="adjustedDepartureTime" class="form-control" value="@if (Model.AdjustedDepartureTime != null) @Model.AdjustedDepartureTime" type="time">
                </div>
                <div class="form-group">
                    <label>Adjusted arrival time</label>
                    <input name="adjustedArrivalTime" class="form-control" value="@if (Model.AdjustedArrivalTime != null) @Model.AdjustedArrivalTime" type="time">
                </div>
                <br/>
                <input type="hidden" name="journeyId" value="@Model.JourneyId">
                <div class="form-group">
                    <input type="submit" value="Save" class="btn btn-primary" />
                </div>
            </form><br>
            <form asp-action="UpdateJourney">
                <input type="hidden" name="journeyId" value="0"><br>
                <div class="form-group">
                    <input type="submit" value="Disconnect Journey" class="btn btn-danger" />
                </div>
            </form>
        </div>
} else
{
   <div class="row">
            <form asp-action="UpdateJourney">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <label>Journey</label>
                    <select name="journeyId" class="form-select">
                        @try{
                            @await Component.InvokeAsync("JourneySelect")
                        }
                        catch {
                            <text>Incomplete Journey</text>
                        }
                    </select>
                </div><br>
                <div class="form-group">
                    <input type="submit" value="Save" class="btn btn-primary" />
                </div>
            </form>
        </div>
}

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
